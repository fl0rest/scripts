#!/bin/bash

self="${0##*/}"

show_help () {
	cat <<END_HELP

tlog	Search the transfer.log (by defalut) for useful information

Usage $self [-c] [-r] [-i] [-I address] [-f filename] [-h]

Options:

	-c	Print top returned HTTP codes
	-r	Print top requests
	-i	Print top IPs
	-a	Print top user agents
	-I	Specify a IP to search for (in transfer.log by default)
	-f	Specify a file to search
	-h	Display this message 

END_HELP
}
extras=0
while getopts 'criaI:f:h' OPTION; do
        case "$OPTION" in
                c) #Print HTTP codes
			extras=$((extras+1))
			#cat transfer.log | cut -d " " -f 9 | sort | uniq -c | sort -rn | head
			echo "HTTP codes"
                        ;;
                r) #Print requests
			extras=$((extras+2))
			#cat transfer.log | cut -d " " -f 9 | sort | uniq -c | sort -rn | head
			echo "Refferers"
                        ;;
		i) #Print IPs
			extras=$((extras+4))
			#cat transfer.log | cut -d " " -f 1 | sort | uniq -c | sort -rn | head
			echo "IP addresses"
			;;
		a) #Print User agents
			extras=$((extras+8))
			#cat transfer.log | awk '{print $NF}' | sort | uniq -c | sort -rn | head
			echo "User agents"
			;;
                I) #Specify IP addresses
			needIP="$OPTARG"
			#gerp "$needIP" transfer.log 
			echo "NeedIp: $needIP"
                        ;;
                f) #Specify a file to search
                        file="$OPTARG"
			echo "File:$file"
                        ;;
                h) #Display usage
			show_help
			exit
			;;
                ?)
                        echo "Script usage: ${0##*/} [-c] [-r] [-i] [-I address] [-f filename] [-h]" >&2
                        exit 1
                        ;;
        esac
done
	if [[ "$extras" == 1 ]]; then
		#cat transfer.log | cut -d " " -f 9 | sort | uniq -c | sort -rn | head
		echo "$extras"
	elif [[ "$extras" == 2 ]]; then
		#cat transfer.log | cut -d " " -f 11 | sort | uniq -c | sort -rn | head
		echo "$extras"
	elif [[ $extras == 3 ]]; then
		#cat transfer.log | cut -d " " -f 9,11 | sort | uniq -c | sort -rn | head
		echo "$extras"
	elif [[ $extras = 4 ]]; then
		#cat transfer.log | cut -d " " -f 1 | sort | uniq -c | sort -rn | head
		echo "$extras"
	elif [[ $extras = 5 ]]; then
		#cat transfer.log | cut -d " " -f 1,9 | sort | uniq -c | sort -rn | head
		echo "$extras"
	elif [[ $extras = 6 ]]; then
		#cat transfer.log | cut -d " " -f 9,11 | sort | uniq -c | sort -rn | head
		echo "$extras"
	elif [[ $extras = 7 ]]; then	
		#cat transfer.log | cut -d " " -f 1,9,11 | sort | uniq -c | sort -rn | head
		echo "$extras"
	elif [[ $extras = 8 ]]; then
		#cat transfer.log | awk '{print $NF}' | sort | uniq -c | sort -rn | head
		echo "$extras"
	elif [[ $extras = 9 ]]; then
		#cat transfer.log | awk '{print $9, $NF}' | sort | uniq -c | sort -rn | head
		echo "$extras"
	elif [[ $extras = 10 ]]; then
		#cat transfer.log | awk '{print $11, $NF}' | sort | uniq -c | sort -rn | head
		echo "$extras"
	elif [[ $extras = 11 ]]; then
		#cat transfer.log | awk '{print $9, $11, $NF}' | sort | uniq -c | sort -rn | head
		echo "$extras"
	elif [[ $extras = 12 ]]; then
		#cat transfer.log | awk '{print $1, $NF}' | sort | uniq -c | sort -rn | head
		echo "$extras"
	elif [[ $extras = 13 ]]; then
		#cat transfer.log | awk '{print $1, $9, $NF}' | sort | uniq -c | sort -rn | head
		echo "$extras"
	elif [[ $extras = 14 ]]; then
		#cat transfer.log | awk '{print $1, $11, $NF}' | sort | uniq -c | sort -rn | head
		echo "$extras"
	elif [[ $extras = 15 ]]; then
		#cat transfer.log | awk '{print $1, $9, $11, $NF}' | sort | uniq -c | sort -rn | head
		echo "$extras"
	else
		echo "Something went horribly wrong"
	fi
shift "$(($OPTIND -1))"
